{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ModalImage/ModalImage.js","service/api.js","components/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","onInputValue","e","target","name","value","setState","onSubmitSearchForm","preventDefault","props","onSubmitForm","this","className","SearchbarStl","searchbar","id","onSubmit","form","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","alt","largeImageURL","onImageClick","src","ImageGalleryItemStl","image","data-largeimageurl","data-id","onClick","url","dataset","largeimageurl","ImageGallery","images","ImageGalleryStyle","gallery","map","item","tags","Button","text","buttonAction","ButtonStl","container","App","LoaderStl","loader","color","height","width","timeout","Modal","pressEscBtn","code","onCloseModal","window","addEventListener","removeEventListener","children","ModalStl","overlay","modal","ModalImage","largeImage","protoType","PropTypes","exact","string","isRequired","axios","defaults","baseURL","params","key","image_type","orientation","per_page","getImage","keword","page","get","q","then","responce","data","useState","setImages","setLargeImageURL","loading","setLoading","error","setError","keyword","setKeyword","setPage","lastPage","setLastPage","useEffect","fetchImage","scrollDown","scrollTo","top","document","documentElement","scrollHeight","behavior","imageApi","hits","totalHits","isLastPage","catch","finally","query","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf0b7991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__xzk6b\",\"item\":\"ImageGallery_item__2enlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__13ZKX\",\"button\":\"Button_button__cnJUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1E4_1\",\"modal\":\"Modal_modal__ZXwIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__3ZIlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3hd4k\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchbarStl from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  onInputValue = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitSearchForm = e => {\n    e.preventDefault();\n    const { inputValue } = this.state;\n    this.props.onSubmitForm(inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <header className={SearchbarStl.searchbar}>\n        <form\n          id=\"form\"\n          onSubmit={this.onSubmitSearchForm}\n          className={SearchbarStl.form}\n        >\n          <button type=\"submit\" className={SearchbarStl.button}>\n            <span className={SearchbarStl.label}>Search</span>\n          </button>\n          <input\n            className={SearchbarStl.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"inputValue\"\n            value={inputValue}\n            id=\"input\"\n            onChange={this.onInputValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItemStl from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({\n  webformatURL,\n  alt,\n  largeImageURL,\n  id,\n  onImageClick,\n}) {\n  const getlargeImageURL = e => {\n    onImageClick({\n      url: e.target.dataset.largeimageurl,\n      alt: e.target.alt,\n    });\n  };\n  return (\n    <img\n      src={webformatURL}\n      alt={alt}\n      className={ImageGalleryItemStl.image}\n      data-largeimageurl={largeImageURL}\n      data-id={id}\n      onClick={getlargeImageURL}\n    />\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport ImageGalleryStyle from './ImageGallery.module.css';\n\nfunction ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className={ImageGalleryStyle.gallery}>\n      {images.map(image => (\n        <li key={image.id} className={ImageGalleryStyle.item}>\n          <ImageGalleryItem\n            webformatURL={image.webformatURL}\n            alt={image.tags}\n            largeImageURL={image.largeImageURL}\n            id={image.id}\n            onImageClick={onImageClick}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport ButtonStl from './Button.module.css';\n\nfunction Button({ text, buttonAction }) {\n  return (\n    <div className={ButtonStl.container}>\n      <button type=\"button\" onClick={buttonAction} className={ButtonStl.button}>\n        {text}\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  buttonAction: PropTypes.func.isRequired,\n};\nexport default Button;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport LoaderStl from './Loader.module.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={LoaderStl.loader}>\n        <Loader\n          type=\"Puff\"\n          color=\"#0F7A8F\"\n          height={50}\n          width={50}\n          timeout={2000}\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ModalStl from './Modal.module.css';\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.pressEscBtn);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.pressEscBtn);\n    this.props.onCloseModal();\n  }\n\n  pressEscBtn = e => {\n    if (e.code === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    const { onCloseModal, children } = this.props;\n\n    return (\n      <div className={ModalStl.overlay} onClick={onCloseModal}>\n        <div className={ModalStl.modal}>{children}</div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ModalImage({ largeImage }) {\n  const { alt, url } = largeImage;\n  return <img src={url} alt={alt} />;\n}\n\nModalImage.protoType = {\n  largeImage: PropTypes.exact({\n    alt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ModalImage;\n","import axios from 'axios';\nconst API_KEY = '19799176-4c87c41e9b3623f80b0424cac';\nconst BASE_URL = 'https://pixabay.com/api';\n\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\n\n// const getImage = async (keyword = '', page) => {\n//   try {\n//     const { data } = await axios.get('', {\n//       params: { q: keyword, page: page },\n//     });\n//     return data;\n//   } catch (error) {\n//     console.log('error', { error });\n//     return [];\n//   }\n// };\n\nconst getImage = (keword = '',page ) =>{\n  return axios.get('',{params:{q: keword, page: page}}).then(responce =>responce.data);\n}\n\nexport default getImage;\n","import { useState, useEffect } from 'react';\n\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Loader from './Loader/Loader';\nimport Modal from './Modal/Modal';\nimport ModalImage from './ModalImage/ModalImage';\nimport imageApi from '../service/api';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [keyword, setKeyword] = useState('');\n  const [page, setPage] = useState(1);\n  const [lastPage, setLastPage] = useState(1);\n\n  const onSubmitForm = query => {\n    setKeyword(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  const hideLargeImage = () => {\n    setLargeImageURL(null);\n  };\n\n  useEffect(() => {\n    if (!keyword) {\n      return;\n    }\n\n    fetchImage();\n    // eslint-disable-next-line\n  }, [keyword]);\n\n  useEffect(() => {\n    if (page > 2) {\n      scrollDown();\n    }\n  }, [page]);\n\n  const isLastPage = data => {\n    const perPageImages = 12;\n    const totalHits = data.totalHits - perPageImages;\n    if (totalHits <= 0) {\n      setLastPage(true);\n    } else {\n      setLastPage(false);\n    }\n  };\n\n  const scrollDown = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  function fetchImage() {\n    setLoading(true);\n    imageApi(keyword, page)\n      .then(data => {\n        setImages(images => [...images, ...data.hits]);\n        setPage(page => page + 1);\n        isLastPage(data);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }\n  return (\n    <>\n      <Searchbar onSubmitForm={onSubmitForm} />\n      {images.length > 0 && (\n        <ImageGallery images={images} onImageClick={setLargeImageURL} />\n      )}\n      {largeImageURL && (\n        <Modal onCloseModal={hideLargeImage}>\n          <ModalImage largeImage={largeImageURL} />\n        </Modal>\n      )}\n      {images.length > 0 && !lastPage && !loading && (\n        <Button text=\"Load more\" buttonAction={fetchImage} />\n      )}\n      {loading && <Loader />}\n      {error && <p>ERROR</p>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './components/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__yGFcL\",\"form\":\"Searchbar_form__3WfJP\",\"button\":\"Searchbar_button__3s3el\",\"label\":\"Searchbar_label__2jvIE\",\"input\":\"Searchbar_input__1MZoZ\"};"],"sourceRoot":""}